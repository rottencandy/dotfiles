[core]
	pager = delta
[user]
	email = md.saud020@gmail.com
	name = Mohammed Saud
[color] # colorize output
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[diff]
	colorMoved = default
[credential] # cache credentials
	helper = cache --timeout=3600
[interactive]
	diffFilter = delta --color-only
[delta]
	side-by-side = true
	line-numbers = true
	navigate = true
[merge]
	conflictstyle = diff3
[sendemail]
	smtpEncryption = tls
	smtpServer = smtp.gmail.com
	smtpServerPort = 587
	smtpUser = md.saud020@gmail.com
[pull]
	rebase = true
[alias]
	st = status
	co = checkout
	br = branch
	last = log -1 HEAD
	yoink = reset --hard

	# All unmerged commits after fetch
	lc = log ORIG_HEAD.. --stat --no-merges

	# log in local time
	llog = log --date=local

	# Fetch PR from upstream
	pr = "!f() { git fetch upstream pull/${1}/head:pr${1}; }; f"

	# Pretty log
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

	# Show current branch
	pwd = symbolic-ref --short HEAD
	# Show corresponding upstream branch
	upstream = name-rev @{upstream}

	# Set upstream before pushing if necessary
	pu = "!f() { if [ \"$(git upstream 2> /dev/null)\" ]; then git push; else git push -u origin $(git pwd); fi }; f"

	# Pull submodules
	pulsub = submodule update --remote
[filter "lfs"]

	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
