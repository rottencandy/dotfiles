""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Appearance
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable           " enable syntax highlighting
filetype plugin indent on      " Load filetype-specific indentation

" Set and configure the color scheme
colorscheme OceanicNext
hi Normal guibg=NONE ctermbg=NONE
set background=dark
set number              " Show line numbers
set relativenumber      " Relative line numbering
set showcmd             " Show command being typed in bottom bar
set lazyredraw          " Redraw screen less frequently(Does not affect usage)
set showmatch           " Highlight matching [{()}]
set hlsearch            " Highlight search matches

" Disable all error bells
set noerrorbells
set novisualbell
set t_vb=
set tm=500

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Behaviour
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype plugin on      " Load filetype-specific configs
set shiftwidth=4        " Set display size of tabs
"set softtabstop=4       " Write 4 spaces when tab is pressed
"set expandtab           " Tabs mean spaces. Use <C-V>Tab to insert real tab.
set smarttab            " Insert real tab if pressed in beginning of line
set nrformats="bin,hex" " define bases for <C-a> and <C-x> math operations

" Backspace works on autoindent, line break and start of insert
set backspace=indent,eol,start
set autoindent
set wrap

set encoding=utf8       " UTF-8 as default encoding
set ffs=unix,dos,mac    " Standard file type as Unix
set autoread            " automatically read when file is edited from outside
set wildmenu            " Command-line completion dropdown-thing
set hidden              " Hide unsaved buffers instead of closing
"set confirm             " Prompt if exiting without saving
set mouse=a             " Use mouse for all modes

set incsearch           " Search as characters are entered
set ignorecase          " Ignore case
set smartcase           " Except if there is a capital letter

set splitbelow          " New split goes below
set splitright          " and to right
set foldenable          " Enable code folding
set foldnestmax=10      " Max 10 nested folds
set foldlevel=0         " Close all folds by default
"set foldmethod=indent   " Fold based on indent level
set scrolloff=0         " scroll offset

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Status line
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" unicode(private) separators: 
set laststatus=2                " Always show statusline

function! StatuslineMode()
    let l:mode=mode()
    if l:mode==#"n"
        return "  NORMAL "
    elseif l:mode==#"i"
        return "  INSERT "
    elseif l:mode==?"v"
        return "  VISUAL "
    elseif l:mode==?"R"
        return "  REPLACE "
    else
	return "   "
    endif
endfunction

"let g:currentmode={
"    \ 'n'  : '  NORMAL ',
"    \ 'no' : '  NORMAL·Operator Pending ',
"    \ 'v'  : '  VISUAL ',
"    \ 'V'  : '  V·Line ',
"    \ '^V' : '  V·Block ',
"    \ 's'  : '  SELECT ',
"    \ 'S'  : '  S·Line ',
"    \ '^S' : '  S·Block ',
"    \ 'i'  : '  INSERT ',
"    \ 'R'  : '  REPLACE ',
"    \ 'Rv' : '  V·Replace ',
"    \ 'c'  : '  COMMAND ',
"    \ 'cv' : '  Vim Ex ',
"    \ 'ce' : '  EX ',
"    \ 'r'  : '  PROMPT ',
"    \ 'rm' : '  MORE ',
"    \ 'r?' : '  CONFIRM ',
"    \ '!'  : '  SHELL ',
"    \ 't'  : '  TERMINAL '
"    \}
hi User1 ctermbg=black ctermfg=grey guibg=black guifg=grey
hi User2 ctermbg=green ctermfg=black guibg=green guifg=black
hi User3 ctermbg=black ctermfg=lightgreen guibg=black guifg=lightgreen

set statusline=
set statusline+=%#DiffAdd#%{StatuslineMode()}

set statusline+=%#Cursor#
set statusline+=\ %n\           " buffer number
set statusline+=%{&paste?'\ PASTE\ ':''}
set statusline+=%{&spell?'\ SPELL\ ':''}
set statusline+=%R              " readonly flag
set statusline+=%M              " modified [+] flag
set statusline+=%#CursorLine#  " color
set statusline+=\ %f\           " file name
set statusline+=%=              " right align
set statusline+=%#CursorColumn# " color

" file encoding, format
set statusline+=%{&fileencoding?&fileencoding:&encoding}\ 
set statusline+=%{&fileformat}\ 

set statusline+=%Y\            " file type
set statusline+=\ %{FugitiveHead()}
set statusline+=\ %3l:%-2c      " line + column
set statusline+=%#CursorLine#  " separator
set statusline+=%#Cursor#       " color
set statusline+=%3p%%\          " percentage

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"netrw
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:netrw_banner = 0          " Top banner
let g:netrw_liststyle = 3       " Directory list view
let g:netrw_browse_split = 4    " File open behaviour
let g:netrw_altv = 1
let g:netrw_winsize = 25        " Size of opened buffer
" Open by default on launch
"augroup ProjectDrawer
"  autocmd!
"  autocmd VimEnter * :Vexplore
"augroup END

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Key maps
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" :W to save file with elevated permissions
command W w !sudo tee % > /dev/null

" j and k keys together to exit insert mode.
:imap jk <Esc>
:imap kj <Esc>

" Map redraw-screen to also clear search highlights
nnoremap <C-L> :nohl<CR><C-L>

let mapleader = " "     " Set leader key
nnoremap <leader>f :FZF<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" % jump to matching xml tags, if/else/endif, etc.
packadd! matchit

" Enable fzf plugin
"set rtp+=~/apps/fzf

