# Requires tmux>=2.4
# Not tested on Mac, BSD

################################
# Options
###############################

# Changing ctrl b to ctrl a as the prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Switch to last window
bind a last-window

# Automatically set window titles
set-window-option -g automatic-rename on
set -g set-titles on

# Set escape time delay to be smaller
# to make tmux more responsive to commands
set -s escape-time 1
# Address vim mode-switching delay
#set -s escape-time 0

# scrollback size
set -g history-limit 5000

# pass through xterm keys
set -g xterm-keys on

# Force UTF
setw -gq utf on

# Set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
set -g pane-base-index 1

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Support for 256 colors in terminal
set -g default-terminal "screen-256color"

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Enable mouse support
set -g mouse on

################################
# Keybinds
###############################

# Detach current session
bind-key C-d detach-client

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client
 
# r - reload tmux config
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config.'

# o - rename window
bind-key -T prefix o command-prompt -I "#W" "rename-window -- '%%'"

# t - new window
unbind t
unbind C-t
bind-key t new-window
bind-key C-t new-window


# q - kill session
unbind q
unbind C-q
bind-key q kill-session
bind-key C-q kill-session

# n - New session
unbind n
unbind C-n
bind-key n new-session
bind-key C-n new-session

# Switch between next/prev window
#bind -n C-p previous-window
#bind -n C-n next-window

# ctrl + '+' - Zoom in
unbind C-+
bind C-+ \
new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'\;\
swap-pane -s tmux-zoom.0 \;\
select-window -t tmux-zoom

# ctrl + '-' - Zoom out
unbind C--
bind C-- \
	last-window \;\
	swap-pane -s tmux-zoom.0 \;\
	kill-window -t tmux-zoom

# Visual Activity Monitoring between windows
setw -g monitor-activity on
set -g visual-activity on

################################
# Pane navigation/management
###############################

# Split panes using | and -
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Open new panes in current path
bind c new-window -c '#{pane_current_path}'

# w - kill pane
bind-key w kill-pane

# Enable names for panes
#set -g pane-border-status top

# Use Alt-hjkl keys WITHOUT PREFIX KEY to switch panes
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# Resizing panes(can also be done with mouse)
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r h resize-pane -L 2
bind -r l resize-pane -R 2

# Copy/paste in pane, can use visual-mode style selection
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Use 'y' to yank(requires xsel)
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xsel"
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

bind C-v paste-buffer

################################
# Status line
###############################

# Disable all visual bells
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
#setw -g monitor-activity off
#set -g visual-activity off

# Status bar update time(in seconds)
set -g status-interval 30

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Status position
set -g status-position bottom

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Length of status line
set -g status-left-length 30
set -g status-right-length 150

set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ❐ #S #[bg=colour0]#[fg=colour7]#{?client_prefix,#[fg=colour2],}#{?window_zoomed_flag, 🔍 ,} #[fg=colour1]  ♥ #(~/dotfiles/tmux_scripts/battery.sh)  '
set -g status-right '#[fg=colour7]#[bg=colour7] #[fg=colour2]#(~/dotfiles/tmux_scripts/uptime.sh) #[fg=colour1]#[fg=colour3]#[bg=colour3]#[fg=colour0] #(~/dotfiles/tmux_scripts/music.sh) %A, %b %d #[bg=colour3]#[fg=colour1]#[bg=colour1]#[fg=colour0] %l:%M %p '

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=colour0]#[bg=colour6]#[fg=colour1]#[bg=colour6] #I  #W #[fg=colour6]#[bg=colour0]"
set -g window-status-format "#[fg=colour11]#[bg=colour0]#I#[fg=colour15]  #W"

#Window/pane type in centre
#set -g status-justify centre

################################
# Colors
###############################

# Background of status line
set -g status-bg colour0

# Pane borders
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour137

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# set the color of the window list (name of the pane)
setw -g window-status-style fg=colour3,bg=default,dim

#  modes
setw -g clock-mode-colour colour14
setw -g mode-style 'fg=colour3 bg=colour15 bold'

# messages
set -g message-style 'fg=colour232 bg=colour16 bold'

#Show reloaded message in bright white
set -g message-style fg=white,bg=default,bright

# Set inactive/active window styles
#set -g window-style 'fg=colour243,bg=black'
#set -g window-active-style 'fg=colour250,bg=black'

################################
# tmux variables
###############################

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# For a more complete list view: man strftime

# Run as bash script to see all possible colors
#for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolours${i}\n"
#done

#D ()
#F ()
#H (hostname)
#I (window index)
#P ()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)

